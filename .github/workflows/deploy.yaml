name: DeployWorkflow

on: push

jobs:
    deploy1:
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v5

            - name: ssh setup
              run: |
                mkdir -p ~/.ssh
                echo "${{secrets.SSH_PRIVATE_KEY}}" > ~/.ssh/meinPrivateKey
                chmod 400 ~/.ssh/meinPrivateKey
                ssh-keyscan -H ${{secrets.EC2_IP_1}}  >> ~/.ssh/known_hosts    
            
            - name: install nginx
              run: |
                ssh -i ~/.ssh/meinPrivateKey ubuntu@${{secrets.EC2_IP_1}} "sudo apt update"
                ssh -i ~/.ssh/meinPrivateKey ubuntu@${{secrets.EC2_IP_1}} "sudo apt install nginx -y"
                
            - name: index.html für nginx bereitstellen
              run: |
                sed "s/\$(hostname)/${{secrets.EC2_IP_1}}/g" index.html > index_ip.html
                scp -i ~/.ssh/meinPrivateKey index_ip.html ubuntu@${{secrets.EC2_IP_1}}:/home/ubuntu/index.html
                ssh -i ~/.ssh/meinPrivateKey ubuntu@${{secrets.EC2_IP_1}} "sudo cp /home/ubuntu/index.html /var/www/html/index.html"
    deploy2:
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v5

            - name: ssh setup
              run: |
                mkdir -p ~/.ssh
                echo "${{secrets.SSH_PRIVATE_KEY}}" > ~/.ssh/meinPrivateKey
                chmod 400 ~/.ssh/meinPrivateKey
                ssh-keyscan -H ${{secrets.EC2_IP_2}}  >> ~/.ssh/known_hosts    
            
            - name: install nginx
              run: |
                ssh -i ~/.ssh/meinPrivateKey ubuntu@${{secrets.EC2_IP_2}} "sudo apt update"
                ssh -i ~/.ssh/meinPrivateKey ubuntu@${{secrets.EC2_IP_2}} "sudo apt install nginx -y"
                
            - name: index.html für nginx bereitstellen
              run: |
                sed "s/\$(hostname)/${{secrets.EC2_IP_2}}/g" index.html > index_ip.html
                scp -i ~/.ssh/meinPrivateKey index_ip.html ubuntu@${{secrets.EC2_IP_2}}:/home/ubuntu/index.html
                ssh -i ~/.ssh/meinPrivateKey ubuntu@${{secrets.EC2_IP_2}} "sudo cp /home/ubuntu/index.html /var/www/html/index.html"
    deploy3:
        runs-on: ubuntu-latest
        steps:
            - name: checkout
              uses: actions/checkout@v5

            - name: ssh setup
              run: | 
                mkdir -p ~/.ssh
                echo "${{secrets.SSH_PRIVATE_KEY}}" > ~/.ssh/meinPrivateKey
                chmod 400 ~/.ssh/meinPrivateKey
                ssh-keyscan -H ${{secrets.EC2_IP_3}}  >> ~/.ssh/known_hosts    
            
            - name: install nginx
              run: |
                ssh -i ~/.ssh/meinPrivateKey ubuntu@${{secrets.EC2_IP_3}} "sudo apt update"
                ssh -i ~/.ssh/meinPrivateKey ubuntu@${{secrets.EC2_IP_3}} "sudo apt install nginx -y"
                
            - name: index.html für nginx bereitstellen
              run: |
                sed "s/\$(hostname)/${{secrets.EC2_IP_3}}/g" index.html > index_ip.html
                scp -i ~/.ssh/meinPrivateKey index_ip.html ubuntu@${{secrets.EC2_IP_3}}:/home/ubuntu/index.html
                ssh -i ~/.ssh/meinPrivateKey ubuntu@${{secrets.EC2_IP_3}} "sudo cp /home/ubuntu/index.html /var/www/html/index.html"